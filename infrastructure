#Problem 1: Wrong google search
#The goal is to deploy an nginx server on ubuntu that reverse proxies google.com but with a catch.
#Every search that includes "rockets" should be turned into search about "Relativity Space". If I go to this server in my browser
#I will be presented with google's page and if I search for "rockets" I should get results about "Relativity Space".
#  -I should be able to run your submitted script on an ubuntu box with admin access and then hit localhost and get the google page
#  (It should include downloading and installing nginx and then configuring it to do reverse proxy).
#  -It doesn't need to support https - http is fine.
#  - Bonus points for deploying the ubuntu image with your reverse proxy as a docker image in docker hub.
#
#Problem 2: PowerShell deleter
#The goal is to write a PowerShell script that accepts three parameters from command line.
#First is an absolute path to a folder and next two are dates in following format: 'HH mm yyyy dd MM'.
#The script should then recursively look in all the folders within the path provided and delete files that have been
#created between the first date and second date, and also contain the word "Copy" in their name.

# Solution 1: (As of today this is no longer possible with the solution below, I still wanted to learn nginx and this problem helped me do so)

sudo apt-get update
sudo apt install nginx


sudo tee /etc/nginx/nginx.conf <<EOF
http{

	server {
		listen 80;
		server_name localhost;

		location / {
			proxy_pass http://www.google.com;
			proxy_set_header Host www.google.com;
		}

        location /search {
            try_files $uri $uri/ @search_rewrite;
        }

		location @search_rewrite {
            if ($args ~* "q=rockets") {
                rewrite ^/search.*$ /search?q=Relativity+Space break;
            }
        }

	}
}

events {}
EOF

sudo systemctl restart nginx



# Solution 2:

param (
    [string]$folderPath,
    [string]$startDate,
    [string]$endDate
)

function Parse-Date($dateString) {
    return [DateTime]::ParseExact($dateString, 'HH mm yyyy dd MM', $null)
}

try {
    $startDateTime = Parse-Date $startDate
    $endDateTime = Parse-Date $endDate

    Get-ChildItem -Path $folderPath -File -Recurse | Where-Object {
        $_.CreationTime -ge $startDateTime -and $_.CreationTime -le $endDateTime -and $_.Name -match 'Copy'
    } | ForEach-Object {
        try {
            Remove-Item $_.FullName -Force
            Write-Host "Deleted file: $($_.FullName)"
        } catch {
            Write-Host "Error deleting file: $($_.FullName) - $_.Exception.Message"
        }
    }
} catch {
    Write-Host "Error: $_.Exception.Message"
}





